//====================================================================\\
||                _____                                               ||
||               /  __ \                                              ||
||               | /  \/_ __ ___  _ __  _   _ ___                     ||
||               | |   | '__/ _ \| '_ \| | | / __|                    ||
||               | \__/\ | | (_) | | | | |_| \__ \                    ||
||                \____/_|  \___/|_| |_|\__,_|___/                    ||
||                          Explicação de tempo da WoE                ||
||====================================================================||
||= Herc/Cronus                                                       ||
\\====================================================================//

=== [Changelog/Créditos]

1.0 -> 2012/07/17
     - Criação do Documento [erKURITA]
1.1 -> 2017/06/21
     - Tradução [SlexFire]

=== [Explicação]

Detalhes do funcionamento padrão do controlador da WoE.

Existem dois comandos principais que determinam o tempo da WoE:
OnClock<hora><minuto>: e gettime(<tipo>).

OnClock<hora><minuto>: dispara quando chegar a <hora><minuto>.
O formato é HHMM, onde H = Hora, M = Minuto.
OnClock2350: roda às 23:50, hora do servidor.

gettime(<tipo>) Essa função vai retornar uma informação 
específica sobre o tempo atual do sistema. Os tipos são:

	1 - Segundos (de um minto)
	2 - Minutos (de uma hora)
	3 - Hora (de um dia), variando de 0 a 23
	4 - Dia da semana (0 para domingo, 6 para sábado)
	5 - Dia do mês
	6 - Número do mês
	7 - Ano
	8 - Dia do ano

Desta forma a verificação pode ser feita por: minuto, hora, dia, mês, etc.

-------------------------------------------------------------------------------

Estrutura:

	OnClock2100:	// Hora de início  Terça(2), Quinta(4)
	OnClock2300:	// Hora de término Terça(2), Quinta(4)
	OnClock1600:	// Hora de início  Sábado(6)
	OnClock1800:	// Hora de término Sábado(6)

Essas 4 labels serão executadas uma após a outra, realizando a próxima verificação:

	if((gettime(4)==2) && (gettime(3)>=21 && gettime(3)<23)) goto L_Start;
	if((gettime(4)==4) && (gettime(3)>=21 && gettime(3)<23)) goto L_Start;
	if((gettime(4)==6) && (gettime(3)>=16 && gettime(3)<18)) goto L_Start;

Esta parte verificará os horários. Uma vez que os tempos de Início e Fim 
são executados pela mesma cadeia de comandos, estas verificações são importantes
para garantir o tempo certo. Vejamos o seguinte exemplo:

	if((gettime(4)==2) && (gettime(3)>=21 && gettime(3)<23))

O primeiro gettime() com tipo 4, está verificando o dia da semana, e está
comparando com um número desejado, que é 2(Terça). A função retornará
1 (verdadeiro) ou 0 (falso).

O segundo gettime() está checando o tipo 3, a hora, e está comparando a 21.
Se a primeira parte for maior ou igual (>=) a segunda parte, a comparação
retornará 1.

O terceiro e último gettime() está checando novamente a hora, mas o tempo deve ser 
inferior ao tempo especificado (neste caso, 23).

Agora, observe os parênteses. Parênteses são muito importantes ao fazer comparações e
condições. Verifiquem esta ordem. Colocarei caracteres fictícios para este exemplo:

	if ((X && (Y && Z)) goto L_Start;

Está dizendo, se Y e Z forem verdadeiros, a condição é cumprida. Agora vamos usar outro 
conjunto de caracteres fictícios. Estamos verificando se (Y && Z) = G:

	if (X && G) goto L_Start;

Está dizendo que se X e G são verdadeiros, a condição é cumprida, portanto proceda para L_Start.

Agora, a última parte do script, o final da WoE:

	if((gettime(4)==2) && (gettime(3)==23)) goto L_End;
	if((gettime(4)==4) && (gettime(3)==23)) goto L_End;
	if((gettime(4)==6) && (gettime(3)==18)) goto L_End;
	end;

Isto é a mesma coisa que antes, porém está chacando o dia no primeiro gettime() e
a hora no segundo. Se ambas as condições são verdadeiras, a WoE será finalizada. Aqui estamos 
checando o fim do tempo e não o início.

Outra coisa importante é o "OnAgitInit:". Esta label especial será executada assim que os 
dados do castelo forem carregados a partir dos dados do personagem. Ela verificará o tempo de início e término
para ver se a WoE está acontecendo, por isso as horas devem ser verificadas.

-------------------------------------------------------------------------------

Um exemplo de como configurar a WoE para começar Segunda, às 16:00 horas e terminar às 22:00 horas:

	OnClock1600: // 16:00 = 4 pm
	OnClock2200: // 22:00 = 10 pm

	OnAgitInit: // Isso só pode ser escrito uma vez: Coloque "OnClock" acima e as verificações abaixo.

	if ((gettime(4)==1) && (gettime(3)>=16 && gettime(3)<22)) goto L_Start;
	if ((gettime(4)==1) && (gettime(3)==22) goto L_End;
	end; // Não esqueça isto!
